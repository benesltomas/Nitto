(********************************************************************
 * COPYRIGHT -- Bernecker + Rainer
 ********************************************************************
 * Library: AsPrintCon
 * File: AsPrintCon.typ
 * Author: staudeckerm
 * Created: April 16, 2009
 ********************************************************************
 * Data types of library AsPrintCon
 ********************************************************************)

TYPE
	wnc_sysPara_typ : 	STRUCT 
		wndWidth : REAL; (*Winder width. Units: [mm].*)
		matThickness : REAL; (*Material thickness. Units: [µm].*)
		minDiam : REAL; (*Minimum winder diameter. Units: [mm].*)
		maxDiam : REAL; (*Maximum winder diameter. Units: [mm].*)
		xDiam : REAL; (*Diameter between minDiam and maxDiam . Units: [mm].*)
		minInertia : REAL; (*Inertia of winder axis at minDiam. Units: [kgm²].*)
		xInertia : REAL; (*Inertia of winder axis at xDiam. Units: [kgm²].*)
		kvTorque : REAL; (*Velocity prop. friction coefficient of winder axis. Units: [Nms].*)
		posTorque : REAL; (*Static torque in positive direction. Units: [Nm].*)
		negTorque : REAL; (*Static torque in negative direction. Units: [Nm].*)
		lineUnits : REAL; (*Scaling of line position. Units: [units/m].*)
		wndUnits : UDINT; (*Winder axis scaling, see load units. Units: [units].*)
		revMotor : UDINT; (*Motor revolutions. Units: [1].*)
		gearRatio : REAL; (*Gear ratio of power train. Units: [1].*)
		axisType : SINT; (* (-1: winder, +1: unwinder).*)
	END_STRUCT;
	wnc_pidPara_typ : 	STRUCT 
		Kp : REAL; (*Proportional gain.*)
		Tn : REAL; (*Integral action time.*)
		Td : REAL; (*Derivative action time.*)
		Tf : REAL; (*Derivative filter time.*)
		yi_max : REAL; (*Limitation of integral action part.*)
		y_min : REAL; (*Lower limit of controller output.*)
		y_max : REAL; (*Upper limit of controller output.*)
	END_STRUCT;
	wnc_filterPara_typ : 	STRUCT 
		filterMode : USINT; (*Filter mode (0: no filter, 1: PT2 filter, 2: Kalman filter).*)
		filterTime : REAL; (*. Units: [s].*)
	END_STRUCT;
	wnc_estPara_typ : 	STRUCT 
		cycEstWindow : UDINT; (*Duration of cyclic position measurement. Units: [units].*)
		cycEstTrig : UDINT; (*Cyclic trigger to start position measurement. Units: [units].*)
		filterMode : USINT; (*Filter mode (0: no filter, 1: PT2 filter, 2: LQ filter).*)
		filterTime : REAL; (*Time constant of PT2 filter (mode = 1). Units: [s].*)
		filterWindow : UDINT; (*Filter window of LQ filter (mode = 2). Units: [units]. Valid value range: filterWindow >= 0. filterWindow = 0 switches additional smoothing off. *)
	END_STRUCT;
	wnc_motPara_typ : 	STRUCT 
		filterTime : REAL; (*Time constant of PT2 filter (mode=1). Units: [s].*)
		kT : REAL; (*ParID 55, sync Motor*)
		pp : REAL; (*ParID 47, async Motor*)
		Lr : REAL; (*ParID 77, async Motor*)
		Lh : REAL; (*ParID 78, async Motor*)
		I0 : REAL; (*ParID 79, async Motor*)
	END_STRUCT;
	wnc_simPara_typ : 	STRUCT 
		wndWidth : REAL; (*Winder width. Units: [mm].*)
		matThickness : REAL; (*Material thickness. Units: [µm].*)
		matLength : REAL; (*Material length between winder and infeed. Units: [mm].*)
		material : USINT; (*(0: plastic, 1: paper).*)
		minDiam : REAL; (*Minimum winder diameter. Units: [mm].*)
		maxDiam : REAL; (*Maximum winder diameter. Units: [mm].*)
		xDiam : REAL; (*Diameter between minDiam and maxDiam . Units: [mm].*)
		startDiam : REAL; (*Diameter the simulation starts with. Units: [mm].*)
		minInertia : REAL; (*Inertia of winder axis at minDiam. Units: [kgm²].*)
		xInertia : REAL; (*Inertia of winder axis at xDiam. Units: [kgm²].*)
		dcrInertia : REAL; (*Inertia of dancer arm. Units: [kgm²].*)
		dcrLength : REAL; (*Dancer arm length. Units: [mm].*)
		maxDcrPos : REAL; (*Dancer arm maximum position. Units: [mm].*)
		kvTorque : REAL; (*Velocity prop. friction coefficient of winder axis. Units: [Nms].*)
		lineUnits : REAL; (*Scaling of line position. Units: [units/m].*)
		wndUnits : UDINT; (*Winder axis scaling, see load units. Units: [units].*)
		revMotor : UDINT; (*Motor revolutions. Units: [1].*)
		accLine : REAL; (*Line acceleration. Units: [(m/min)/s].*)
		decLine : REAL; (*Line deceleration. Units: [(m/min)/s].*)
		gearRatio : REAL; (*Gear ratio of power train. Units: [1].*)
		kTWndMot : REAL; (*Torque constant of winder motor. Units: [Nm/A].*)
		axisType : SINT; (* (-1: winder, +1: unwinder).*)
		noise : BOOL; (*Add noise to output signals (0: no, 1: yes).*)
	END_STRUCT;
	pid_internal_typ : 	STRUCT 
		statusTxt : STRING[100]; (*Function block status message as message text.*)
		Ts : REAL; (*Task cycle time. Units: [s].*)
		err_old : REAL; (*Data for internal use.*)
		yLimAct : BOOL; (*Data for internal use.*)
		reset_old : BOOL; (*Data for internal use.*)
		pidPara : wnc_pidPara_typ; (*Data for internal use.*)
		init : BOOL; (*Data for internal use.*)
		update_old : BOOL; (*Data for internal use.*)
		enable_old : BOOL; (*Data for internal use.*)
		Bootkey : UDINT; (*Data for internal use.*)
	END_STRUCT;
	pctrl_internal_typ : 	STRUCT 
		statusTxt : STRING[100]; (*Function block status message as message text.*)
		Ts : REAL; (*Task cycle time. Units: [s].*)
		PID : WNCPidCtrl; (*Data for internal use.*)
		sysParaStatus : USINT; (*Data for internal use.*)
		sysPara : wnc_sysPara_typ; (*Data for internal use.*)
		x : ARRAY[0..1] OF REAL; (*Data for internal use.*)
		init : BOOL; (*Data for internal use.*)
		update_old : BOOL; (*Data for internal use.*)
		enable_old : BOOL; (*Data for internal use.*)
		Bootkey : UDINT; (*Data for internal use.*)
	END_STRUCT;
	wcd_internal_typ : 	STRUCT 
		statusTxt : STRING[100]; (*Function block status message as message text.*)
		Ts : REAL; (*Task cycle time. Units: [s].*)
		sysPara : wnc_sysPara_typ; (*Data for internal use.*)
		estPara : wnc_estPara_typ; (*Data for internal use.*)
		updateValid : BOOL; (*Data for internal use.*)
		actWndPos_old : UDINT; (*Data for internal use.*)
		actWndPosDelta : DINT; (*Data for internal use.*)
		actWndRev_tmp : ARRAY[0..1] OF UDINT; (*Data for internal use.*)
		actWndRev : LREAL; (*Data for internal use.*)
		trigNewMeas : BOOL; (*Data for internal use.*)
		startDcrPos : REAL; (*Data for internal use.*)
		startWndPos : DINT; (*Data for internal use.*)
		startLinePos : DINT; (*Data for internal use.*)
		MeasInProgress : BOOL; (*Data for internal use.*)
		wndRatio : LREAL; (*Data for internal use.*)
		BufCntMax : DINT; (*Data for internal use.*)
		BufCnt : DINT; (*Data for internal use.*)
		BufIdx : DINT; (*Data for internal use.*)
		xN : ARRAY[0..99] OF LREAL; (*Data for internal use.*)
		yN : ARRAY[0..99] OF LREAL; (*Data for internal use.*)
		posInt : ARRAY[0..1] OF LREAL; (*Data for internal use.*)
		X_tmp : ARRAY[0..2] OF LREAL; (*Data for internal use.*)
		X : LREAL; (*Data for internal use.*)
		Y : LREAL; (*Data for internal use.*)
		Y_filt : LREAL; (*Data for internal use.*)
		dY_filt : LREAL; (*Data for internal use.*)
		d_mat : LREAL; (*Data for internal use.*)
		k_avg : LREAL; (*Data for internal use.*)
		nbRecLQDataVecValid : UDINT; (*Data for internal use.*)
		initRecLQParaVec : BOOL; (*Data for internal use.*)
		resetRecLQParaVec : BOOL; (*Data for internal use.*)
		updateRecLQParaVec : BOOL; (*Data for internal use.*)
		q : REAL; (*Data for internal use.*)
		cN : ARRAY[0..1] OF LREAL; (*Data for internal use.*)
		cN_filt : ARRAY[0..1] OF LREAL; (*Data for internal use.*)
		PN : ARRAY[0..2] OF LREAL; (*Data for internal use.*)
		a : ARRAY[0..3] OF LREAL; (*Data for internal use.*)
		b : ARRAY[0..1] OF DINT; (*Data for internal use.*)
		x : ARRAY[0..1] OF LREAL; (*Data for internal use.*)
		mode_old : USINT; (*Data for internal use.*)
		manEstTrig_old : BOOL; (*Data for internal use.*)
		filterMode_old : USINT; (*Data for internal use.*)
		filterTime_PT2_old : REAL; (*Data for internal use.*)
		StartDiamSetMode : USINT; (*Data for internal use.*)
		setStartDiam_old : BOOL; (*Data for internal use.*)
		update : BOOL; (*Data for internal use.*)
		update_old : BOOL; (*Data for internal use.*)
		enable_old : BOOL; (*Data for internal use.*)
		Bootkey : UDINT; (*Data for internal use.*)
	END_STRUCT;
	wcff_internal_typ : 	STRUCT 
		statusTxt : STRING[100]; (*Function block status message as message text.*)
		Ts : REAL; (*Task cycle time. Units: [s].*)
		uLine_old : REAL; (*Data for internal use.*)
		sysParaStatus : USINT; (*Data for internal use.*)
		sysPara : wnc_sysPara_typ; (*Data for internal use.*)
		alpha : REAL; (*Data for internal use.*)
		accLine : REAL; (*Data for internal use.*)
		init : BOOL; (*Data for internal use.*)
		update_old : BOOL; (*Data for internal use.*)
		enable_old : BOOL; (*Data for internal use.*)
		Bootkey : UDINT; (*Data for internal use.*)
	END_STRUCT;
	lsp_internal_typ : 	STRUCT 
		statusTxt : STRING[100]; (*Function block status message as message text.*)
		Ts : REAL; (*Task cycle time. Units: [s].*)
		sysPara : wnc_sysPara_typ; (*Data for internal use.*)
		init : BOOL; (*Data for internal use.*)
		sysParaStatus : USINT; (*Data for internal use.*)
		inParaStatus : USINT; (*Data for internal use.*)
		vecKV : ARRAY[0..49] OF REAL; (*Data for internal use.*)
		vecTN : ARRAY[0..49] OF REAL; (*Data for internal use.*)
		vecDiam : ARRAY[0..49] OF REAL; (*Data for internal use.*)
		numPoints : UINT; (*Data for internal use.*)
		update_old : BOOL; (*Data for internal use.*)
		enable_old : BOOL; (*Data for internal use.*)
		Bootkey : UDINT; (*Data for internal use.*)
	END_STRUCT;
	wcsp_internal_typ : 	STRUCT 
		statusTxt : STRING[100]; (*Function block status message as message text.*)
		Ts : REAL; (*Task cycle time. Units: [s].*)
		kTnom : REAL; (*Data for internal use.*)
		init : BOOL; (*Data for internal use.*)
		x : ARRAY[0..2] OF REAL; (*Data for internal use.*)
		simStepResponse_old : BOOL; (*Data for internal use.*)
		count : UDINT; (*Data for internal use.*)
		simTime : REAL; (*Data for internal use.*)
		simActive : BOOL; (*Data for internal use.*)
		update_old : BOOL; (*Data for internal use.*)
		enable_old : BOOL; (*Data for internal use.*)
		Bootkey : UDINT; (*Data for internal use.*)
	END_STRUCT;
	sim_internal_typ : 	STRUCT 
		statusTxt : STRING[100]; (*Function block status message as message text.*)
		Ts : REAL; (*Task cycle time. Units: [s].*)
		updateValid : BOOL; (*Data for internal use.*)
		simPara : wnc_simPara_typ; (*Data for internal use.*)
		x : ARRAY[0..21] OF LREAL; (*Data for internal use.*)
		rho : REAL; (*Data for internal use.*)
		EA : REAL; (*Data for internal use.*)
		eps : REAL; (*Data for internal use.*)
		matBreak : BOOL; (*Data for internal use.*)
		update : BOOL; (*Data for internal use.*)
		update_old : BOOL; (*Data for internal use.*)
		enable_old : BOOL; (*Data for internal use.*)
		Bootkey : UDINT; (*Data for internal use.*)
	END_STRUCT;
END_TYPE
